/* globals JQClass */
/*! Simple JavaScript Inheritance
 * By John Resig http://ejohn.org/
 * MIT Licensed.
 */
!function(){"use strict";var l=!1;window.JQClass=function(){},JQClass.classes={},JQClass.extend=function t(e){var s=this.prototype;l=!0;var n,a=new this;for(n in l=!1,e)if("function"==typeof e[n]&&"function"==typeof s[n])a[n]=function(n,a){return function(){var t=this._super;this._super=function(t){return s[n].apply(this,t||[])};var e=a.apply(this,arguments);return this._super=t,e}}(n,e[n]);else if("object"==typeof e[n]&&"object"==typeof s[n]&&"defaultOptions"===n){var i,r=s[n],o=e[n],u={};for(i in r)u[i]=r[i];for(i in o)u[i]=o[i];a[n]=u}else a[n]=e[n];function c(){!l&&this._init&&this._init.apply(this,arguments)}return((c.prototype=a).constructor=c).extend=t,c}}(),
/*! Abstract base class for collection plugins v1.0.2.
	Written by Keith Wood (wood.keith{at}optusnet.com.au) December 2013.
	Licensed under the MIT license (http://keith-wood.name/licence.html). */
function($){"use strict";
/** <p>Abstract base class for collection plugins v1.0.2.</p>
		<p>Written by Keith Wood (wood.keith{at}optusnet.com.au) December 2013.</p>
		<p>Licensed under the MIT license (http://keith-wood.name/licence.html).</p>
		<p>Use {@link $.JQPlugin.createPlugin} to create new plugins using this framework.</p>
		<p>This base class provides common functionality such as:</p>
		<ul>
			<li>Creates jQuery bridge - allowing you to invoke your plugin on a collection of elements.</li>
			<li>Handles initialisation including reading settings from metadata -
				an instance object is attached to the affected element(s) containing all the necessary data.</li>
			<li>Handles option retrieval and update - options can be set through default values,
				through inline metadata, or through instantiation settings.<br>
				Metadata is specified as an attribute on the element:
				<code>data-&lt;pluginName>="&lt;option name>: '&lt;value>', ..."</code>.
				Dates should be specified as strings in this format: <code>'new Date(y, m-1, d)'</code>.</li>
			<li>Handles method calling - inner functions starting with '_'are inaccessible,
				whereas others can be called via <code>$(selector).pluginName('functionName')</code>.</li>
			<li>Handles plugin destruction - removing all trace of the plugin.</li>
		</ul>
		@module JQPlugin
		@abstract */function camelCase(t){return t.replace(/-([a-z])/g,function(t,e){return e.toUpperCase()})}JQClass.classes.JQPlugin=JQClass.extend({name:"plugin",defaultOptions:{},regionalOptions:{},deepMerge:!0,_getMarker:function(){return"is-"+this.name},_init:function(){$.extend(this.defaultOptions,this.regionalOptions&&this.regionalOptions[""]||{});var i=camelCase(this.name);$[i]=this,$.fn[i]=function(e){var n=Array.prototype.slice.call(arguments,1),a=this,s=this;return this.each(function(){if("string"==typeof e){if("_"===e[0]||!$[i][e])throw"Unknown method: "+e;var t=$[i][e].apply($[i],[this].concat(n));if(t!==a&&void 0!==t)return s=t,!1}else $[i]._attach(this,e)}),s}},setDefaults:function(t){$.extend(this.defaultOptions,t||{})},_attach:function(t,e){var n;(t=$(t)).hasClass(this._getMarker())||(t.addClass(this._getMarker()),e=$.extend(this.deepMerge,{},this.defaultOptions,this._getMetadata(t),e||{}),n=$.extend({name:this.name,elem:t,options:e},this._instSettings(t,e)),t.data(this.name,n),this._postAttach(t,n),this.option(t,e))},_instSettings:function(t,e){return{}},_postAttach:function(t,e){},_getMetadata:function(elem){try{var data=elem.data(this.name.toLowerCase())||"",key,data=data.replace(/(\\?)'/g,function(t,e){return e?"'":'"'}).replace(/([a-zA-Z0-9]+):/g,function(t,e,n){n=data.substring(0,n).match(/"/g);return n&&n.length%2!=0?e+":":'"'+e+'":'}).replace(/\\:/g,":"),value;for(key in data=$.parseJSON("{"+data+"}"),data){data.hasOwnProperty(key)&&(value=data[key],"string"==typeof value&&value.match(/^new Date\(([-0-9,\s]*)\)$/)&&(data[key]=eval(value)))}return data}catch(e){return{}}},_getInst:function(t){return $(t).data(this.name)||{}},option:function(t,e,n){var a=(t=$(t)).data(this.name),s=e||{};if(!e||"string"==typeof e&&void 0===n)return(s=(a||{}).options)&&e?s[e]:s;t.hasClass(this._getMarker())&&("string"==typeof e&&((s={})[e]=n),this._optionsChanged(t,a,s),$.extend(a.options,s))},_optionsChanged:function(t,e,n){},destroy:function(t){(t=$(t)).hasClass(this._getMarker())&&(this._preDestroy(t,this._getInst(t)),t.removeData(this.name).removeClass(this._getMarker()))},_preDestroy:function(t,e){}}),$.JQPlugin={createPlugin:function(t,e){"object"==typeof t&&(e=t,t="JQPlugin"),t=camelCase(t);var n=camelCase(e.name);JQClass.classes[n]=JQClass.classes[t].extend(e),new JQClass.classes[n]}}}(jQuery);
//# sourceMappingURL=maps/jquery.plugin.min.js.map
